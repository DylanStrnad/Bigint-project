/**
* Dylan Strnad
* BIGINT
* CS 23001
*/


// bigint Test Program
//
// Tests:  int constructor, uses ==
// 
// NEED TO IMPLEMENT
//
#include <iostream> 
#include <cassert>
#include "bigint.hpp"


//===========================================================================
int main () {
        
     {
        //Setup fixture
        bigint left("79926590486769910860918353102053475987589260712645173139272804761614");
        bigint right("5495575210172533345936811730198336048661555547679087012248774294922");
        bigint result;

        // Test 
       result = left + right;  

        // Verify
        assert(left   == "79926590486769910860918353102053475987589260712645173139272804761614");
        assert(right  == "5495575210172533345936811730198336048661555547679087012248774294922");
        assert(result == "85422165696942444206855164832251812036250816260324260151521579056536");
    }

    {
      //------------------------------------------------------
      //Setup fixture
      bigint left("220000055566872259985321225225");
      bigint right("50567722987402311882215520245");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "220000055566872259985321225225");
      assert(right  == "50567722987402311882215520245");
      assert(result == "270567778554274571867536745470");
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(74341);
      bigint right(83928);
      bigint result;

      result = left + right;

      // Test

      // Verify
      assert(left   == 74341);
      assert(right  == 83928);
      assert(result == 158269);
    }


    {
    // ------------------------------------------------------
    //   Setup fixture
      bigint left("21011976789087179152222731965799009181538820891774966989668841203537861959768784305705608509410465694053200866474449106439891898354293436303");
      bigint right("6414236588311823562520719615254588467577823315157285863902203220962099476529920607232552551764774117435036886801685761097358143914061181376");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "21011976789087179152222731965799009181538820891774966989668841203537861959768784305705608509410465694053200866474449106439891898354293436303");
      assert(right  == "6414236588311823562520719615254588467577823315157285863902203220962099476529920607232552551764774117435036886801685761097358143914061181376");
      assert(result == "27426213377399002714743451581053597649116644206932252853571044424499961436298704912938161061175239811488237753276134867537250042268354617679");
    }

    {
     // ------------------------------------------------------
      // Setup fixture
      bigint left("8037631901483981218204368371359749585132418256071375440397205915499921447985678687896182467492339360241204904640791105447737345219590400759726184463148238561110798102688311165669242912328040834338295");
      bigint right("5042671070578078636292350616079384907481900659110321074786263191473612391280582294225311751903703882137068303019602692583733333079729380361319916566952511822457777764732255404200309601855331635976333");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "8037631901483981218204368371359749585132418256071375440397205915499921447985678687896182467492339360241204904640791105447737345219590400759726184463148238561110798102688311165669242912328040834338295");
      assert(right  == "5042671070578078636292350616079384907481900659110321074786263191473612391280582294225311751903703882137068303019602692583733333079729380361319916566952511822457777764732255404200309601855331635976333");
      assert(result == "13080302972062059854496718987439134492614318915181696515183469106973533839266260982121494219396043242378273207660393798031470678299319781121046101030100750383568575867420566569869552514183372470314628");
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(82938);
      bigint right(14347);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 82938);
      assert(right  == 14347);
      assert(result == 97285);
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left("789513549865598445649845646");
      bigint right("21988465197894511879816654984");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "789513549865598445649845646");
      assert(right  == "21988465197894511879816654984");
      assert(result == "22777978747760110325466500630");
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(654);
      bigint right(78);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 654);
      assert(right  == 78);
      assert(result == 732);
    }

    {
     // ------------------------------------------------------
      //Setup fixture
      bigint left("5649856451324987856151654584521654984321649851146884985116545651324865154845668651521");
      bigint right("125648974651234568974561564897451648974561648516489745616485146121222215451254125145");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "5649856451324987856151654584521654984321649851146884985116545651324865154845668651521");
      assert(right  == "125648974651234568974561564897451648974561648516489745616485146121222215451254125145");
      assert(result == "5775505425976222425126216149419106633296211499663374730733030797446087370296922776666");
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left("211654231654832164561879822123484320");
      bigint right("21587987654321654498561321679865231316");
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "211654231654832164561879822123484320");
      assert(right  == "21587987654321654498561321679865231316");
      assert(result == "21799641885976486663123201501988715636");
    }
    
    
    std::cout << "Done with testing addition." << std::endl;
    return 0;
}


